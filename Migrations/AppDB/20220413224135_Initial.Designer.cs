// <auto-generated />
using System;
using Aspire.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aspire.Migrations.AppDB
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220413224135_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aspire.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PostTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Support")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("PostStatusId");

                    b.HasIndex("PostTypeId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Aspire.Models.PostStatus", b =>
                {
                    b.Property<int>("PostStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptiion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostStatusId");

                    b.ToTable("PostStatuses");

                    b.HasData(
                        new
                        {
                            PostStatusId = 1,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "This status shows the post is open to use with Auther's permission.",
                            Name = "Open"
                        },
                        new
                        {
                            PostStatusId = 2,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "This status shows that the post is adopted and under cunstruction.",
                            Name = "In Progress"
                        },
                        new
                        {
                            PostStatusId = 3,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "This status shows that the post is completed but still open to adopt with auther's permission.",
                            Name = "Completed"
                        },
                        new
                        {
                            PostStatusId = 4,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "This status shows that the post should not be displayed to anyone.",
                            Name = "Private"
                        },
                        new
                        {
                            PostStatusId = 5,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "This post is forcefully removed from the post library.",
                            Name = "Blocked"
                        });
                });

            modelBuilder.Entity("Aspire.Models.PostType", b =>
                {
                    b.Property<int>("PostTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptiion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostTypeId");

                    b.ToTable("PostTypes");

                    b.HasData(
                        new
                        {
                            PostTypeId = 1,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "The post that use this type is a new and has to be builded from the scratch.",
                            Name = "New"
                        },
                        new
                        {
                            PostTypeId = 2,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "The post that use this type is something already exists and has to be updated it could be anything including adding a new feature.",
                            Name = "Update"
                        },
                        new
                        {
                            PostTypeId = 3,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "The post that use this type is something that already exists and Buged that need to be Fixed.",
                            Name = "Bug"
                        },
                        new
                        {
                            PostTypeId = 4,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "The post that use this type is Something that only required Design.",
                            Name = "Design"
                        },
                        new
                        {
                            PostTypeId = 5,
                            CreatedOn = new DateTime(2022, 4, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            Descriptiion = "The post that use this type is Something that is designed and need cunstruction",
                            Name = "Cunstruction"
                        });
                });

            modelBuilder.Entity("Aspire.Models.UserPostSupport", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId", "UserId");

                    b.ToTable("UserPostSuport");
                });

            modelBuilder.Entity("Aspire.Models.Post", b =>
                {
                    b.HasOne("Aspire.Models.PostStatus", "PostStatus")
                        .WithMany()
                        .HasForeignKey("PostStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aspire.Models.PostType", "PostType")
                        .WithMany()
                        .HasForeignKey("PostTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostStatus");

                    b.Navigation("PostType");
                });
#pragma warning restore 612, 618
        }
    }
}
