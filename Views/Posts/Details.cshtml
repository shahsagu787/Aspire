@model Aspire.Models.Post

@using Microsoft.AspNetCore.Identity
@using Aspire.Areas.Identity.Data

@inject UserManager<AuthUser> UserManager

@{
    ViewData["Title"] = "Details";
}
 @if(TempData["Reply"] != null)
    {
       <div class="alert alert-success">
        @TempData["Reply"].ToString()
        </div>
    }
<h1 class="animate-in border-bottom pb-3 mb-3"> @Html.DisplayFor(model => model.Title) [@Html.DisplayFor(model => Model.PostType.Name)]</h1>
<div class="row">
    <div class="col-md-4">
        <div class="card border-dark">
            <div class="card-body">
                <h5 class="card-title border-bottom pb-3 border-dark">
                    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp" alt="avatar" class="rounded-circle img-fluid" width="60">
                    <a class="btn-link text-decoration-none" asp-controller="Home" asp-action="UserInfo" asp-route-id="@Model?.UserId">@ViewBag.User</a>
                </h5>
                <div class="mt-3">
                    @if(Model.UserId == @UserManager.FindByNameAsync(User.Identity.Name).Result.Id)
    {
        <a class="btn btn-outline-primary w-100" asp-action="Edit" asp-route-id="@Model?.PostId">Edit Post</a>
    }
    else
    {
        <a id="btnSendEmail" class="btn btn-outline-primary w-100 mb-2" data-bs-toggle="modal" data-bs-target="#emilModal">Send email</a>
              <div class="modal fade" tabindex="-1" id="emilModal">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title">Send E-Mail to @ViewBag.User</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body text-start">
                        <form method="post">
                            <div class="form-group mb-2">
                                <label class="control-label">Message</label>
                                <textarea class="form-control w-100" name="txtMessage" required></textarea> 
                            </div>
                            <div class="form-group mb-2">
                                <input type="submit" value="Send" class="btn btn-outline-success" />
                            </div>
                        </form>
                      </div>
                    </div>
                  </div>
                  </div>
        @if(ViewBag.AllowSupport)
        {
        <a class="btn btn-outline-success w-100" asp-action="Support" asp-route-id="@Model?.PostId">Support Post</a>         
        }
        <a class="btn btn-outline-danger w-100 mt-2" asp-action="Report" asp-route-id="@Model?.PostId">Report post</a>         
    }
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="card border-dark">
            <div class="card-body">
                <p>
                    @Html.DisplayFor(model => model.Discription)
                </p>
                <div class="text-dark"># Supports: @Html.DisplayFor(model => model.Support)</div>
                 <div class="text-dark">Status: @Html.DisplayFor(model => model.PostStatus.Name)</div>
                <div class="text-dark">Posted On: @Html.DisplayFor(model => Model.PostedOn)</div>
            </div>
        </div>
    </div>
</div>
@*<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Discription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Discription)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Support)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Support)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PostedOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PostedOn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PostStatus)
        </dt>
        <dd class = "col-sm-10">
            
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PostType)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PostType.Name)
        </dd>
        <dt class = "col-sm-2">
            Auther
        </dt>
        <dd class = "col-sm-10">
            <a class="btn-link" asp-controller="Home" asp-action="UserInfo" asp-route-id="@Model?.UserId">@ViewBag.User</a>
        </dd>
    </dl>
</div>
<div>
    @if(Model.UserId == @UserManager.FindByNameAsync(User.Identity.Name).Result.Id)
    {
        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model?.PostId">Edit</a>
    }
    else
    {
        @if(ViewBag.AllowSupport)
        {
        <a class="btn btn-success" asp-action="Support" asp-route-id="@Model?.PostId">Support Post</a>         
        }
    }
    |
    <a class="btn btn-warning" asp-action="Index">Back to List</a>
</div>*@
